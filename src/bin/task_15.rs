fn main() {
    // Cоздается строковый литерал s1, который ссылается на строку "hello".
    let s1 = "hello";

    // s2 будет содержать копию строки "hello" в куче.
    let s2 = String::from("hello");

    // Cрез строки &str, указывающий на данные, хранящиеся в s2.
    // Таким образом, s3 будет ссылаться на ту же строку, что и s2, но в виде среза.
    let s3 = s2.as_str();

    let size_of_s1 = std::mem::size_of_val(s1);

    // Здесь мы измеряем размер s2, который является экземпляром String.
    // size_of_val(&s2) возвращает размер структуры String, которая включает указатель на данные, длину и емкость.
    // На 64-битной системе это 24 байта (8 байт для указателя, 8 байт для длины и 8 байт для емкости).
    let size_of_s2 = std::mem::size_of_val(&s2);

    // Тут мы измеряем размер s3, который является срезом &str.
    // Срезы также имеют фиксированный размер, так как они содержат указатель на данные и длину.
    // На 64-битной системе размер s3 будет равен 16 байтам (8 байт для указателя и 8 байт для длины).
    let size_of_s3 = std::mem::size_of_val(&s3);

    println!("{:?}", size_of_s1);

    println!("{:?}", size_of_s2);

    println!("{:?}", size_of_s3);

    // Результат работы
    // 5 — это размер строкового литерала s1, который содержит 5 символов.
    // 24 — это размер структуры String, которая включает указатель, длину и емкость.
    // 16 — это размер среза s3, который содержит указатель и длину.
}
